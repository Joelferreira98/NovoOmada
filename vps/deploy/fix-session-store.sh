#!/bin/bash

# Script para corrigir problemas de Session Store no ambiente de produ√ß√£o
# Arquivo: fix-session-store.sh

set -e

echo "üîß Corrigindo configura√ß√£o de Session Store..."

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

# Backup da configura√ß√£o atual
if [ -f ".env" ]; then
    echo "üìã Fazendo backup da configura√ß√£o atual..."
    cp .env .env.backup.$(date +%Y%m%d_%H%M%S)
fi

# Atualizar depend√™ncias se necess√°rio
echo "üì¶ Verificando depend√™ncias..."
if ! npm list memorystore >/dev/null 2>&1; then
    echo "üì¶ Instalando memorystore..."
    npm install memorystore
fi

# Remover depend√™ncias PostgreSQL desnecess√°rias
echo "üóëÔ∏è Removendo depend√™ncias PostgreSQL desnecess√°rias..."
npm uninstall pg @types/pg connect-pg-simple || true

# Verificar conex√£o MySQL
echo "üîç Verificando conectividade MySQL..."
if [ -n "$DB_HOST" ] && [ -n "$DB_USER" ] && [ -n "$DB_PASSWORD" ]; then
    mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASSWORD" -e "SELECT 1;" 2>/dev/null && echo "‚úÖ MySQL conectando corretamente" || echo "‚ö†Ô∏è Aviso: N√£o foi poss√≠vel conectar ao MySQL"
else
    echo "‚ö†Ô∏è Vari√°veis de ambiente MySQL n√£o definidas"
fi

# Reiniciar servi√ßo se estiver usando PM2
if command -v pm2 >/dev/null 2>&1; then
    echo "üîÑ Reiniciando aplica√ß√£o com PM2..."
    pm2 restart omada-voucher 2>/dev/null || echo "‚ÑπÔ∏è PM2 n√£o encontrado ou aplica√ß√£o n√£o est√° rodando"
fi

echo "‚úÖ Corre√ß√£o de Session Store conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Verifique se a aplica√ß√£o est√° funcionando"
echo "2. Teste o login no sistema"
echo "3. Se houver problemas, verifique os logs: pm2 logs omada-voucher"